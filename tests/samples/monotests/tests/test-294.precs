using System;

class ObsoleteClass
{
}

public class Test
{
	private string _name;

	public Test() : this("layout", false)
	{
	}

	public Test(string a, bool writeToErrorStream)
	{
		Name = a;
	}

	public string Name
	{
		get { return _name; }
		set { _name = value; }
	}
}

public class DerivedTest : Test
{
        ObsoleteClass member;

		public DerivedTest(string a) : base(a, false)
        {
			Name = a;
		}
        
        public string Method ()
        {
            return base.Name;
        }

		public void T2 () {}
        
        public static void Main () {}
}

class ObsoleteClass2: ObsoleteClass
{
}


class ObsoleteClass3
{
	public static readonly double XSmall = 0.6444444444444;

	public readonly double X_Small = XSmall;

	public static readonly double X_Small2 = XSmall;
}


class ObsoleteClass4
{

	public void T ()
	{
		lock (typeof (ObsoleteClass4)) {}
		lock (typeof (ObsoleteClass2)) {}
	}
}